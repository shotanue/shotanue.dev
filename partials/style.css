/* define variables */
:root {
  --color-background: hsl(0 0% 12% / 1);
  --color-window: hsl(0 0% 0%/ 1);
  --color-primary: hsl(29 34% 45%);
  --color-text-base: var(--color-primary);

  /* ref. */
  /* https://coliss.com/articles/build-websites/operation/css/fluid-type-scale-calculator.html */
  /* https://www.fluid-type-scale.com/calculate?minFontSize=16&minWidth=400&minRatio=1.25&maxFontSize=19&maxWidth=1280&maxRatio=1.333&steps=sm%2Cbase%2Cmd%2Clg%2Cxl%2Cxxl%2Cxxxl&baseStep=base&prefix=font-size&decimals=2&useRems=on&remValue=16&previewFont=JetBrains+Mono&previewText=美しい日本語&previewWidth=1280 */
  --font-size-sm: clamp(0.8rem, 0.17vw + 0.76rem, 0.89rem);
  --font-size-base: clamp(1rem, 0.34vw + 0.91rem, 1.19rem);
  --font-size-md: clamp(1.25rem, 0.61vw + 1.1rem, 1.58rem);
  --font-size-lg: clamp(1.56rem, 1vw + 1.31rem, 2.11rem);
  --font-size-xl: clamp(1.95rem, 1.56vw + 1.56rem, 2.81rem);
  --font-size-xxl: clamp(2.44rem, 2.38vw + 1.85rem, 3.75rem);
  --font-size-xxxl: clamp(3.05rem, 3.54vw + 2.17rem, 5rem);

  --space-sm: 10px;
  --space-base: 15px;
  --space-md: 20px;
  --space-lg: 25px;
  --space-xl: 30px;
  --space-xxl: 35px;
  --space-xxxl: 40px;
}

/* define global styles*/
html {
  font-family: 'JetBrains Mono', sans-serif;
  font-size: var(--font-size-base);
  color: var(--color-text-base);
}


a {
  & {
    text-decoration: none;
  }

  &:visited {
    color: var(--color-text-base);
  }

  &:hover {
    text-decoration: underline;
  }
}

body {
  display: grid;

  /* prevent from iPhone's action bar collision */
  --offset: calc(env(safe-area-inset-bottom, 0px));

  grid-template:
    "header header header" calc(5svh + var(--offset)) "left main right" calc(90svh - var(--offset) - var(--offset)) "footer footer footer" max(5vh, calc(var(--offset) - 5px)) /
    1fr 95% 1fr;
  background: rgba(56, 56, 56, 1);
  min-height: 100dvh;
  overflow: hidden;

  &>header {
    grid-area: header;

    display: grid;
    place-content: center;

    &>ul {
      display: flex;
      grid-area: h-right;
      margin-top: 1dvh;
      margin-bottom: 1dvh;

      >li {
        padding-right: 10px;


        &+li {
          &::before {
            content: "| ";
          }
        }
      }
    }
  }

  &>main.window {
    grid-area: main;
    display: grid;
    grid-template:
      "main main main" auto /
      auto;

    background: rgba(0, 0, 0, 0.3);
    box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.37);
    backdrop-filter: blur(7px);
    -webkit-backdrop-filter: blur(7px);
    border-radius: 10px;
    overflow: scroll;

    &>.content {
      grid-area: main;
      padding-left: var(--space-sm);
      padding-right: var(--space-sm);
      overflow-x: hidden;

      &>.copyright {
        grid-area: copyright;
        display: grid;
        place-content: end;
      }
    }
  }

  &>footer {
    grid-area: footer;

    display: grid;
    place-content: center;

    &>.path {
      grid-area: center;
      font-size: var(--font-size-sm);
    }
  }
}

/* モバイルデバイス用のスタイル */
@media screen and (max-width: 600px) {
  body {
    grid-template:
      "header" 5dvh "main" 90dvh
      "footer" 5dvh /
      1fr;
  }
}

img.polygon {
  position: absolute;
  top: 100px;
}

img.ellipse {
  position: absolute;
  bottom: 0;
  right: 0;
}

img.polygon,
img.ellipse {
  width: 45vw;
  height: 33vh;
}

ul {
  padding: 0;
}

li {
  padding-top: 10px;
}

/* markdown css */
.markdown {
  overflow-wrap: break-word;

  & h1::before {
    content: '# '
  }


  & h2 {
    padding-top: var(--space-md);

    &::before {
      content: '## '
    }
  }

  & h3 {
    padding-top: var(--space-base);

    &::before {
      content: '### '
    }
  }

  & h4 {
    padding-top: var(--space-sm);

    &::before {
      content: '#### '
    }
  }

  & h5 {
    &::before {
      content: '##### '
    }
  }

  & a::before {
    content: '[';
  }

  & a::after {
    content: '](' attr(href) ')';
  }

  & p {
    padding-top: var(--space-sm);
  }

  & pre>code::before {
    content: '```' attr(data-lang);
  }

  & pre>code::after {
    content: '```';
  }

  & code::before,
  & code::after {
    content: '`';
  }
}


/* utilities */
.flex {
  display: flex;
}

.flex.center {
  justify-content: center;
}

.font-size-xxl {
  font-size: var(--font-size-xxl);
}

.font-size-xxl {
  font-size: var(--font-size-xxl);
}

.font-size-xl {
  font-size: var(--font-size-xl);
}

.font-size-lg {
  font-size: var(--font-size-lg);
}

.font-size-md {
  font-size: var(--font-size-md);
}

.font-size-base {
  font-size: var(--font-size-base);
}

.font-size-sm {
  font-size: var(--font-size-sm);
}